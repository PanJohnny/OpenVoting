---
import Layout from "../../layouts/Layout.astro";
import {UserModel} from "../../util/users";
import {PollModel} from "../../util/polls";
import {GroupModel} from "../../util/groups";
import {PollOptionModel} from "../../util/poll_options";
import {GroupMembershipModel} from "../../util/group_memberships";
import UserEditModal from "../../components/admin/UserEditModal.astro";
import ModalControl from "../../components/admin/ModalControl.astro";
import UserDeleteModal from "../../components/admin/UserDeleteModal.astro";
import Messenger from "../../util/ui_utils";
import Message from "../../components/Message.astro";
import { Icon } from "astro-icon/components";
import GroupDeleteModal from "../../components/admin/GroupDeleteModal.astro";
import PollDeleteModal from "../../components/admin/PollDeleteModal.astro";

// Kontrola oprávnění
const user = await Astro.session?.get("user");
console.log(user)
if (!user || !user.administrator) {
    return Astro.redirect("/");
}

// Generování náhodného hesla
function generateRandomPassword(length = 16) {
    const charset = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+";
    let password = "";
    for (let i = 0; i < length; i++) {
        password += charset[Math.floor(Math.random() * charset.length)];
    }
    return password;
}

const messenger = new Messenger();

if (Astro.request.method === "POST") {
    const formData = await Astro.request.formData();
    const action = formData.get("action");

    try {
        // Přidání uživatele
        if (action === "add-user") {
            const username = formData.get("username");
            const password = formData.get("password") || generateRandomPassword();
            const isOrganizator = formData.get("organizator") === "on";
            const isAdministrator = formData.get("administrator") === "on";

            await UserModel.create({
                name: username,
                password,
                organizator: isOrganizator,
                administrator: isAdministrator
            });
            messenger.success(`Nový uživatel vytvořen ${username} s heslem ${password}`);
        }
        // Úprava uživatele
        else if (action === "edit-user") {
            const userId = parseInt(formData.get("user-id") as string);
            const username = formData.get("username");
            const isOrganizator = formData.get("organizator") === "on";
            const isAdministrator = formData.get("administrator") === "on";

            await UserModel.update(userId, {
                name: username,
                organizator: isOrganizator,
                administrator: isAdministrator
            });
            messenger.success(`Uživatel byl úspěšně aktualizován`);
        }
        // Smazání uživatele
        else if (action === "delete-user") {
            const userId = parseInt(formData.get("user-id") as string);
            await UserModel.delete(userId);
            messenger.success(`Uživatel byl úspěšně smazán`);
        } else if (action === "reset-user-password") {
            const userId = parseInt(formData.get("user-id") as string);
            const newPassword = generateRandomPassword();
            await UserModel.updatePassword(userId, newPassword);
            messenger.success(`Heslo uživatele bylo úspěšně resetováno na: ${newPassword}`);
        }
        // Smazání ankety
        else if (action === "delete-poll") {
            const pollId = parseInt(formData.get("poll-id") as string);
            await PollModel.delete(pollId);
            messenger.success(`Anketa byla úspěšně smazána`);
        }
        // Přidání skupiny
        else if (action === "add-group") {
            const groupName = formData.get("group-name");
            await GroupModel.create({
                name: groupName,
                owner_id: user.id
            });
            messenger.success(`Skupina ${groupName} byla úspěšně vytvořena`);
        }
        // Smazání skupiny
        else if (action === "delete-group") {
            const groupId = parseInt(formData.get("group-id") as string);
            await GroupModel.delete(groupId);
            messenger.success(`Skupina byla úspěšně smazána`);
        }
    } catch (error) {
        console.error(error);
        messenger.error(`Nepodařilo se zpracovat žádost`);
    }
}

// Získání dat
const users = await UserModel.getAll();
const polls = await PollModel.getAll();
const groups = await GroupModel.getAll();

// Získání detailů k anketám
const pollsWithDetails = await Promise.all(polls.map(async (poll: any) => {
    const options = await PollOptionModel.getByPollId(poll.id);
    const owner = await UserModel.getById(poll.owner_id);
    let group = null;
    if (poll.group_id) {
        group = await GroupModel.getById(poll.group_id);
    }
    return {...poll, options, owner, group};
}));

// Získání detailů ke skupinám
const groupsWithDetails = await Promise.all(groups.map(async (group: any) => {
    const owner = await UserModel.getById(group.owner_id);
    const members = await GroupMembershipModel.getMembersByGroupId(group.id);
    return {...group, owner, members};
}));
---

<Layout title="Administrace OpenVoting">
    <div class="admin-container">
        <div class="header">
            <h1>Administrátorský panel OpenVoting</h1>
            <div class="user-info">
                <p>Přihlášen jako: <strong>{user.name}</strong></p>
            </div>
        </div>

        {messenger.map(m => (
                <Message message={m}/>
        ))}
        <nav class="tabs">
            <button class="tab-btn active" data-tab="users">Uživatelé</button>
            <button class="tab-btn" data-tab="polls">Ankety</button>
            <button class="tab-btn" data-tab="groups">Skupiny</button>
        </nav>

        <main class="admin-content">
            <!-- Panel s uživateli -->
            <section id="users" class="tab-content active">
                <div class="section-header">
                    <h2>Správa uživatelů</h2>
                    <div>
                        <button class="btn" id="show-add-user">Vytvořit uživatele</button>
                        <button class="btn btn-secondary" id="user-bulk">Vytvořit pozvánky</button>
                    </div>
                </div>

                <!-- Formulář pro přidání uživatele -->
                <div id="add-user-form" class="form-container hidden">
                    <form method="POST">
                        <input type="hidden" name="action" value="add-user">
                        <h3>Přidat nového uživatele</h3>
                        <div class="form-group">
                            <label for="username">Uživatelské jméno:</label>
                            <input type="text" id="username" name="username" required>
                        </div>
                        <div class="form-group">
                            <label for="password">Heslo (nechte prázdné pro náhodné):</label>
                            <input type="text" id="password" name="password">
                        </div>
                        <div class="form-group checkbox-group">
                            <label>
                                <input type="checkbox" name="organizator">
                                Oprávnění organizátor
                            </label>
                        </div>
                        <div class="form-group checkbox-group">
                            <label>
                                <input type="checkbox" name="administrator">
                                Oprávnění administrátor
                            </label>
                        </div>
                        <div class="form-actions">
                            <button type="submit" class="btn">Vytvořit uživatele</button>
                            <button type="button" class="btn btn-secondary cancel-form">Zrušit</button>
                        </div>
                    </form>
                </div>

                <!-- Users -->
                <div class="table-container">
                    <table>
                        <thead>
                        <tr>
                            <th>ID</th>
                            <th>Jméno</th>
                            <th>Organizátor</th>
                            <th>Administrátor</th>
                            <th>Vytvořen</th>
                            <th></th>
                        </tr>
                        </thead>
                        <tbody>
                        {users.map((user: any) => (
                                <tr>
                                    <td>{user.id}</td>
                                    <td>{user.name}</td>
                                    <td>{user.organizator ? "Ano" : "Ne"}</td>
                                    <td>{user.administrator ? "Ano" : "Ne"}</td>
                                    <td>{new Date(user.created_at).toLocaleString()}</td>
                                    <td class="actions">
                                        <button class="btn-icon edit-user" data-id={user.id} data-name={user.name}
                                                data-organizator={user.organizator}
                                                data-administrator={user.administrator}>
                                            <Icon name="iconoir:edit-pencil" />
                                        </button>
                                        <button class="btn-icon delete-user" data-id={user.id} data-name={user.name}>
                                            <Icon name="iconoir:delete-circle" />
                                        </button>
                                    </td>
                                </tr>
                        ))}
                        </tbody>
                    </table>
                </div>
            </section>

            <!-- Panel s anketami -->
            <section id="polls" class="tab-content">
                <div class="section-header">
                    <h2>Správa anket</h2>
                    <button class="btn" onclick="window.open('/poll/create')">Vytvořit anketu</button>
                </div>

                <!-- Seznam anket -->
                <div class="polls-grid">
                    {pollsWithDetails.map((poll: any) => (
                            <div class="poll-card">
                                <div class="poll-header">
                                    <h3>{poll.name}</h3>
                                    <div class="poll-actions">
                                        <button class="btn-icon view-poll" data-id={poll.id}>
                                            <Icon name="iconoir:eye-solid" />
                                        </button>
                                        <button class="btn-icon delete-poll" data-id={poll.id} data-name={poll.name}>
                                            <Icon name="iconoir:delete-circle" />
                                        </button>
                                    </div>
                                </div>
                                <div class="poll-details">
                                    <p><strong>Vytvořil:</strong> {poll.owner?.name || "Neznámý"}</p>
                                    <p><strong>Anonymní:</strong> {poll.anonymous ? "Ano" : "Ne"}</p>
                                    <p><strong>Skupina:</strong> {poll.group?.name || ""}</p>
                                    <p><strong>Max. výběrů:</strong> {poll.max_options || "Neomezeno"}</p>

                                    <p><strong>Končí:</strong> {poll.expires?.toLocaleString() || "Není stanoveno"}</p>


                                    <div class="poll-options">
                                        <strong>Možnosti:</strong>
                                        <ul>
                                            {poll.options.map((option: any) => (
                                                    <li>{option.content}</li>
                                            ))}
                                        </ul>
                                    </div>
                                </div>
                            </div>
                    ))}
                </div>
            </section>

            <!-- Panel se skupinami -->
            <section id="groups" class="tab-content">
                <div class="section-header">
                    <h2>Správa skupin</h2>
                    <div>
                        <button class="btn" id="show-add-group">Přidat skupinu</button>
                        <button class="btn btn-secondary" id="more-group-options">Více možností</button>
                    </div>
                </div>

                <div id="add-group-form" class="form-container hidden">
                    <form method="POST">
                        <input type="hidden" name="action" value="add-group">
                        <h3>Přidat novou skupinu</h3>
                        <div class="form-group">
                            <label for="group-name">Název skupiny:</label>
                            <input type="text" id="group-name" name="group-name" required>
                        </div>
                        <div class="form-actions">
                            <button type="submit" class="btn">Vytvořit skupinu</button>
                            <button type="button" class="btn btn-secondary cancel-form">Zrušit</button>
                        </div>
                    </form>
                </div>

                <div class="groups-grid">
                    {groupsWithDetails.map((group: any) => (
                            <div class="group-card">
                                <div class="group-header">
                                    <h3>{group.name}</h3>
                                    <div class="group-actions">
                                        <button class="btn-icon delete-group" data-id={group.id}
                                                data-name={group.name}>
                                            <Icon name="iconoir:delete-circle" />
                                        </button>
                                    </div>
                                </div>
                                <div class="group-details">
                                    <p><strong>Vlastník:</strong> {group.owner?.name || "Neznámý"}</p>
                                    <p>
                                        <strong>Vytvořeno:</strong> {new Date(group.created_at).toLocaleString()}
                                    </p>

                                    <div class="group-members">
                                        <strong>Členové ({group.members?.length || 0}):</strong>
                                        {group.members?.length > 0 ? (
                                                <ul>
                                                    {group.members.map((member: any) => (
                                                            <li>{member.name}</li>
                                                    ))}
                                                </ul>
                                        ) : (
                                                <p class="no-data">Žádní členové</p>
                                        )}
                                    </div>
                                </div>
                            </div>
                    ))}
                </div>
            </section>
        </main>
    </div>

    <UserEditModal/>

    <UserDeleteModal/>

    <PollDeleteModal />

    <GroupDeleteModal />
</Layout>

<ModalControl/>
<style>
    /* Grid Layout a základní styly */
    .admin-container {
        display: grid;
        grid-template-areas:
            "header header"
            "tabs tabs"
            "content content";
        grid-template-rows: auto auto 1fr;
        min-height: calc(100vh - 40px);
        padding: 20px;
        max-width: 1400px;
        margin: 0 auto;
    }

    .header {
        grid-area: header;
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        padding-bottom: 10px;
        border-bottom: 1px solid #ddd;
    }

    .user-info {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .tabs {
        grid-area: tabs;
        display: flex;
        gap: 10px;
    }

    .admin-content {
        grid-area: content;
    }

    /* Záložky */
    .tab-btn {
        padding: 10px 20px;
        background-color: #f0f0f0;
        border: 1px solid #ddd;
        border-bottom: none;
        border-radius: 5px 5px 0 0;
        cursor: pointer;
        font-size: 16px;
        transition: all 0.2s;
        border-bottom: 3px solid gray;
    }

    .tab-btn.active {
        background-color: #fff;
        border-bottom: 3px solid #4CAF50;
    }

    .tab-content {
        display: none;
        padding: 20px;
        background-color: #fff;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .tab-content.active {
        display: block;
    }

    /* Hlavička sekce */
    .section-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

    /* Tabulky */
    .table-container {
        overflow-x: auto;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 20px;
    }

    th, td {
        padding: 12px 15px;
        text-align: left;
        border-bottom: 1px solid #ddd;
    }

    thead tr {
        background-color: #f8f8f8;
        border-bottom: 2px solid #ddd;
    }

    tbody tr:hover {
        background-color: #f5f5f5;
    }

    .actions {
        white-space: nowrap;
        text-align: right;
    }

    /* Grid pro ankety a skupiny */
    .polls-grid, .groups-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 20px;
    }

    .poll-actions {
        display: flex;
    }

    .poll-card, .group-card {
        background-color: #fff;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        padding: 15px;
        transition: transform 0.2s;
    }

    .poll-card:hover, .group-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }

    .poll-header, .group-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 10px;
        padding-bottom: 10px;
        border-bottom: 1px solid #eee;
    }

    .poll-details, .group-details {
        font-size: 14px;
    }

    .poll-details p, .group-details p {
        margin: 5px 0;
    }

    .poll-options ul, .group-members ul {
        padding-left: 20px;
        margin: 5px 0;
    }

    /* Formuláře */
    .form-container {
        background-color: #f9f9f9;
        border-radius: 5px;
        padding: 20px;
        margin-bottom: 20px;
        box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
    }

    .form-container.hidden {
        display: none;
    }

    .form-group {
        margin-bottom: 15px;
    }

    .form-group label {
        display: block;
        margin-bottom: 5px;
        font-weight: bold;
    }

    .checkbox-group {
        display: flex;
        align-items: center;
    }

    .checkbox-group label {
        margin-bottom: 0;
        margin-left: 5px;
        font-weight: normal;
    }

    .form-actions {
        display: flex;
        gap: 10px;
        margin-top: 20px;
    }

    /* Pole pro možnosti */
    .option-row {
        margin-bottom: 10px;
    }

    #options-container {
        margin-bottom: 10px;
    }

    /* Tlačítka */
    .btn {
        padding: 10px 15px;
        background-color: #4CAF50;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 14px;
    }

    .btn:hover {
        background-color: #45a049;
    }

    .btn-secondary {
        background-color: #f0f0f0;
        color: #333;
        border: 1px solid #ddd;
    }

    .btn-secondary:hover {
        background-color: #e0e0e0;
    }

    .btn-danger {
        background-color: #f44336;
    }

    .btn-danger:hover {
        background-color: #d32f2f;
    }

    .btn-small {
        padding: 5px 10px;
        font-size: 12px;
    }

    .btn-icon {
        background: none;
        border: none;
        cursor: pointer;
    }

    .btn-icon:hover {
        color: #3c763d;
    }

    /* Modální okna */
    .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
    }

    .modal-content {
        background-color: #fff;
        margin: 10% auto;
        padding: 20px;
        border-radius: 5px;
        width: 50%;
        max-width: 500px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
        position: relative;
    }

    .close {
        position: absolute;
        right: 15px;
        top: 10px;
        font-size: 24px;
        font-weight: bold;
        cursor: pointer;
    }

    /* Zprávy */
    .message {
        padding: 10px 15px;
        margin-bottom: 20px;
        border-radius: 4px;
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .success {
        background-color: #dff0d8;
        color: #3c763d;
        border: 1px solid #d6e9c6;
    }

    .error {
        background-color: #f2dede;
        color: #a94442;
        border: 1px solid #ebccd1;
    }

    .close-message {
        background: none;
        border: none;
        font-size: 20px;
        cursor: pointer;
        color: inherit;
    }

    /* Responzivní design */
    @media (max-width: 768px) {
        .polls-grid, .groups-grid {
            grid-template-columns: 1fr;
        }

        .modal-content {
            width: 90%;
        }
    }

    /* Formulářové prvky */
    input[type="text"],
    input[type="password"],
    input[type="number"],
    input[type="datetime-local"],
    select {
        width: 100%;
        padding: 10px;
        margin-top: 5px;
        border: 1px solid #ddd;
        border-radius: 4px;
        box-sizing: border-box;
    }

    .no-data {
        color: #777;
        font-style: italic;
    }

    [data-icon] {
        font-size: 20px;
    }
</style>

<script>
    import {userEditModal, userDeleteModal, groupDeleteModal, pollDeleteModal} from "../../util/modals"

    const tabButtons = document.querySelectorAll('.tab-btn');
    const tabContents = document.querySelectorAll('.tab-content');

    // TODO better tab switching
    tabButtons.forEach(button => {
        let openTab = () => {
            const tabName = button.getAttribute('data-tab') as string;

            tabButtons.forEach(btn => btn.classList.remove('active'));
            tabContents.forEach(content => content.classList.remove('active'));

            location.hash = tabName;
            button.classList.add('active');
            document.getElementById(tabName)?.classList.add('active');
        }
        button.addEventListener('click', openTab);

        if (location.hash === `#${button.getAttribute('data-tab')}`) {
            openTab();
        }
    });

    document.getElementById('show-add-user')?.addEventListener('click', () => {
        document.getElementById('add-user-form')?.classList.toggle('hidden');
    });

    document.getElementById('show-add-group')?.addEventListener('click', () => {
        document.getElementById('add-group-form')?.classList.toggle('hidden');
    });

    // Zrušení formulářů
    document.querySelectorAll('.cancel-form').forEach(button => {
        button.addEventListener('click', () => {
            const form = button.closest('.form-container') as Element;
            form.classList.add('hidden');
            form.querySelector('form')?.reset();
        });
    });

    // Modální okna pro úpravy uživatelů
    const editUserBtns = document.querySelectorAll('.edit-user');

    editUserBtns.forEach(btn => {
        btn.addEventListener('click', () => {
            const userId = btn.getAttribute('data-id');
            const username = btn.getAttribute('data-name');
            const isOrganizator = btn.getAttribute('data-organizator') === 'true';
            const isAdministrator = btn.getAttribute('data-administrator') === 'true';

            userEditModal.open({
                id: userId,
                name: username,
                organizator: isOrganizator,
                administrator: isAdministrator
            });
        });
    });

    // Modální okna pro mazání
    const deleteUserBtns = document.querySelectorAll('.delete-user');
    const deletePollBtns = document.querySelectorAll('.delete-poll');
    const deleteGroupBtns = document.querySelectorAll('.delete-group');

    const viewPollBtns = document.querySelectorAll('.view-poll');

    deleteUserBtns.forEach(btn => {
        btn.addEventListener('click', () => {
            const userId = btn.getAttribute('data-id');
            const username = btn.getAttribute('data-name');

            userDeleteModal.open({
                id: userId,
                name: username
            })
        });
    });

    viewPollBtns.forEach(btn => {
        btn.addEventListener('click', () => {
            const pollId = btn.getAttribute('data-id');
            window.open(`/poll/results/${pollId}`, '_blank');
        });
    });

    deleteGroupBtns.forEach(btn => {
        btn.addEventListener('click', () => {
            const groupId = btn.getAttribute('data-id');
            const groupName = btn.getAttribute('data-name');

            groupDeleteModal.open({
                id: groupId,
                name: groupName
            });
        });
    });

    deletePollBtns.forEach(btn => {
        btn.addEventListener('click', () => {
            const pollId = btn.getAttribute('data-id');
            const pollName = btn.getAttribute('data-name');

            pollDeleteModal.open({
                id: pollId,
                name: pollName
            });
        });
    });

    document.querySelector("#more-group-options")?.addEventListener('click', () => {
        window.open("/poll/group");
    })

    document.querySelector("#user-bulk")?.addEventListener('click', () => {
        window.open("/admin/welcome/accounts");
    })
</script>