---
import Layout from "../../../../../layouts/Layout.astro";
import { PollModel } from "../../../../../util/polls";
import { PollOptionModel } from "../../../../../util/poll_options";
import { PollVoterModel } from "../../../../../util/poll_voters";
import { PollVoteModel } from "../../../../../util/poll_votes";
import crypto from "crypto";

// Získání parametrů z URL
const { poll_id, keypair_id, verification_hash } = Astro.params;

let poll = null;
let options = [];
let voterKey = null;
let isValid = false;
let hasVoted = false;
let message = "";
let messageType = "";
let voted = false;

// Ověření platnosti odkazu
try {
    // Načtení dat ankety
    poll = await PollModel.getById(parseInt(poll_id));

    if (!poll) {
        message = "Anketa nebyla nalezena";
        messageType = "error";
    } else if (!poll.anonymous) {
        message = "Tato anketa není anonymní";
        messageType = "error";
    } else {
        // Načtení volebního klíče
        voterKey = await PollVoterModel.getById(parseInt(keypair_id));

        if (!voterKey || voterKey.poll_id !== parseInt(poll_id)) {
            message = "Neplatný klíč pro hlasování";
            messageType = "error";
        } else {
            // Ověření hashe
            const expectedHash = crypto.createHash('sha256')
                .update(`${poll_id}-${keypair_id}-${poll.owner_id}`)
                .digest('hex');

            if (verification_hash !== expectedHash) {
                message = "Neplatný ověřovací hash";
                messageType = "error";
            } else {
                // Kontrola, zda klíč již nebyl použit k hlasování
                hasVoted = await PollVoteModel.hasVoterKeyVoted(parseInt(poll_id), parseInt(keypair_id));

                if (hasVoted) {
                    message = "S tímto odkazem již bylo hlasováno";
                    messageType = "error";
                } else {
                    // Odkaz je platný, načtení možností hlasování
                    isValid = true;
                    options = await PollOptionModel.getByPollId(parseInt(poll_id));
                }
            }
        }
    }
} catch (error) {
    console.error("Chyba při načítání ankety:", error);
    message = "Nastala neočekávaná chyba";
    messageType = "error";
}

// Zpracování hlasování
if (Astro.request.method === "POST" && isValid && !hasVoted) {
    try {
        const formData = await Astro.request.formData();
        const selectedOptions = [];

        // Zpracování vybraných možností
        for (const option of options) {
            if (formData.get(`option-${option.id}`)) {
                selectedOptions.push(option.id);
            }
        }

        if (formData.has("option")) {
            selectedOptions.push(parseInt(formData.get("option")));
        }

        if (selectedOptions.length === 0) {
            message = "Vyberte alespoň jednu možnost";
            messageType = "error";
        } else if (selectedOptions.length > poll.max_options) {
            message = `Můžete vybrat maximálně ${poll.max_options} možností`;
            messageType = "error";
        } else {
            // Podepsání hlasu pomocí soukromého klíče
            const voteData = JSON.stringify(selectedOptions);

            // Uložení hlasu
            for (const optionId of selectedOptions) {
                await PollVoteModel.createAnonymous({
                    poll_id: parseInt(poll_id),
                    option_id: optionId,
                    voter_key_id: parseInt(keypair_id),
                    data: selectedOptions // Předáme celá data pro vytvoření podpisu v modelu
                });
            }

            message = "Váš hlas byl úspěšně zaznamenán";
            messageType = "success";
            voted = true;
            hasVoted = true;
        }
    } catch (error) {
        console.error("Chyba při hlasování:", error);
        message = "Nastala neočekávaná chyba při hlasování";
        messageType = "error";
    }
}
---

<Layout title={poll ? `Hlasování: ${poll.name}` : "Neplatný odkaz"}>
    <div class="container">
        {message && (
                <div class={`message ${messageType}`}>
                    <p>{message}</p>
                    <button class="close-message">&times;</button>
                </div>
        )}

        {isValid && poll && !voted && (
                <div class="poll-container">
                    <h1>{poll.name}</h1>

                    {poll.expires && (
                            <p class="poll-info">
                                Hlasování končí: {new Date(poll.expires).toLocaleString()}
                            </p>
                    )}

                    <form method="POST" class="vote-form">
                        <p class="vote-instruction">
                            Vyberte {poll.max_options === 1 ? "jednu možnost" :
                            poll.max_options === options.length ? "libovolný počet možností" :
                                `maximálně ${poll.max_options} možností`}:
                        </p>

                        <div class="options-container">
                            {options.map((option) => (
                                    <div class="option">
                                        <label class="option-label">
                                            <input
                                                    type={poll.max_options === 1 ? "radio" : "checkbox"}
                                                    name={poll.max_options === 1 ? "option" : `option-${option.id}`}
                                                    value={option.id}
                                            />
                                            <span class="option-text">{option.content}</span>
                                        </label>
                                    </div>
                            ))}
                        </div>

                        <div class="form-actions">
                            <button type="submit" class="btn btn-primary">Hlasovat</button>
                        </div>
                    </form>

                    <div class="note-container">
                        <p class="note">Tento odkaz je určen pro jednorázové anonymní hlasování.</p>
                        <p class="note">Po odeslání hlasu již nebude možné pomocí tohoto odkazu znovu hlasovat.</p>
                    </div>
                </div>
            )}

        {voted && (
                <div class="success-container">
                    <h2>Děkujeme za váš hlas</h2>
                    <p>Váš hlas v anketě "<strong>{poll.name}</strong>" byl úspěšně zaznamenán.</p>
                    <p>Tento odkaz již byl použit a nelze ho použít znovu.</p>
                    <a href="/" class="btn btn-secondary">Zpět na hlavní stránku</a>
                </div>
        )}

        {!isValid && !message && (
                <div class="error-container">
                    <h2>Neplatný odkaz pro hlasování</h2>
                    <p>Tento odkaz není platný nebo již byl použit.</p>
                    <a href="/" class="btn btn-secondary">Zpět na hlavní stránku</a>
                </div>
        )}
    </div>
</Layout>

<style>
    .container {
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
    }

    h1, h2 {
        margin-bottom: 20px;
        text-align: center;
    }

    .poll-container {
        background-color: #f9f9f9;
        padding: 25px;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .poll-info {
        color: #666;
        text-align: center;
        margin-bottom: 20px;
    }

    .vote-instruction {
        font-weight: bold;
        margin-bottom: 15px;
    }

    .options-container {
        margin-bottom: 25px;
    }

    .option {
        margin-bottom: 12px;
    }

    .option-label {
        display: flex;
        align-items: center;
        cursor: pointer;
        padding: 10px;
        border-radius: 4px;
        transition: background-color 0.2s;
    }

    .option-label:hover {
        background-color: #eaf5ea;
    }

    .option-text {
        padding-left: 10px;
    }

    .form-actions {
        display: flex;
        justify-content: center;
        margin-top: 30px;
    }

    .btn {
        padding: 12px 25px;
        border-radius: 4px;
        font-size: 16px;
        cursor: pointer;
        border: none;
        transition: background-color 0.2s;
    }

    .btn-primary {
        background-color: #4CAF50;
        color: white;
    }

    .btn-primary:hover {
        background-color: #45a049;
    }

    .btn-secondary {
        background-color: #f0f0f0;
        color: #333;
        border: 1px solid #ddd;
        text-decoration: none;
        display: inline-block;
        text-align: center;
    }

    .btn-secondary:hover {
        background-color: #e0e0e0;
    }

    .message {
        padding: 15px;
        margin: 20px 0;
        border-radius: 4px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .success {
        background-color: #dff0d8;
        color: #3c763d;
        border: 1px solid #d6e9c6;
    }

    .error {
        background-color: #f2dede;
        color: #a94442;
        border: 1px solid #ebccd1;
    }

    .close-message {
        background: none;
        border: none;
        font-size: 20px;
        cursor: pointer;
        color: inherit;
    }

    .note-container {
        margin-top: 25px;
        padding-top: 15px;
        border-top: 1px solid #ddd;
    }

    .note {
        font-size: 14px;
        color: #666;
        font-style: italic;
        text-align: center;
    }

    .success-container, .error-container {
        text-align: center;
        padding: 30px;
        background-color: #f9f9f9;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .success-container p, .error-container p {
        margin-bottom: 20px;
    }
</style>

<script>
    // Zavření zprávy
    document.querySelectorAll('.close-message').forEach(btn => {
        btn.addEventListener('click', () => {
            btn.closest('.message').style.display = 'none';
        });
    });

    // Kontrola maximálního počtu možností u checkboxů
    const form = document.querySelector('.vote-form');
    const maxOptions = parseInt(document.querySelector('.vote-instruction')?.dataset.maxOptions || '1');

    if (form && maxOptions > 1) {
        const checkboxes = form.querySelectorAll('input[type="checkbox"]');

        checkboxes.forEach(checkbox => {
            checkbox.addEventListener('change', function() {
                const checkedCount = form.querySelectorAll('input[type="checkbox"]:checked').length;

                if (checkedCount > maxOptions) {
                    this.checked = false;
                    alert(`Můžete vybrat maximálně ${maxOptions} možností.`);
                }
            });
        });
    }
</script>