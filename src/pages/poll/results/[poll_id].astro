---
import Layout from "../../../layouts/Layout.astro";
import {PollModel} from "../../../util/polls";
import {PollOptionModel} from "../../../util/poll_options";
import {PollVoteModel} from "../../../util/poll_votes";
import Messenger from "../../../util/ui_utils";
import Message from "../../../components/Message.astro";
import FloatingContainer from "../../../components/FloatingContainer.astro";

// Získání ID ankety z URL parametrů
const {poll_id} = Astro.params;

// Získání přihlášeného uživatele
const user = await Astro.session?.get("user");

let poll = null;
let options = [];
let voteCounts = [];
let totalVotes = 0;
let canViewResults = false;
let canClosePoll = false;

const messenger = new Messenger();

// Zpracování požadavku na uzavření ankety
if (Astro.request.method === "POST") {
    try {
        const formData = await Astro.request.formData();
        const action = formData.get("action");
        if (!poll_id || !action) {
            messenger.error("Chybí ID ankety nebo akce");
        } else {
            poll = await PollModel.getById(parseInt(poll_id));
            if (action === "close_poll" && user && poll_id && (user.administrator || user.id === poll.owner_id)) {
                if (poll) {
                    await PollModel.update(parseInt(poll_id), {
                        name: poll.name,
                        expires: new Date(),
                        max_options: poll.max_options
                    });

                    messenger.success("Anketa byla úspěšně uzavřena");
                }
            }
        }
    } catch (error) {
        console.error("Chyba při uzavírání ankety:", error);
        messenger.error("Nastala chyba při uzavírání ankety");
    }
}

let userVoteTable;
// Načtení dat ankety
try {
    if (poll_id) {
        // Získání detailů ankety
        poll = await PollModel.getById(parseInt(poll_id));

        if (!poll) {
            messenger.error("Anketa nebyla nalezena");
        } else {
            // Kontrola oprávnění pro zobrazení výsledků
            const isPollExpired = poll.expires && new Date(poll.expires) < new Date();
            const isOwner = user && poll.owner_id === user.id;
            const isAdmin = user && user.administrator;

            canViewResults = isPollExpired || isOwner || isAdmin;
            canClosePoll = !isPollExpired && (isOwner || isAdmin);

            if (canViewResults) {
                options = await PollOptionModel.getByPollId(parseInt(poll_id));

                voteCounts = await PollVoteModel.getPollResults(parseInt(poll_id));

                totalVotes = voteCounts.reduce((sum: any, option: any) => sum + parseInt(option.vote_count), 0);

                if (!poll.anonymous) {
                    userVoteTable = await PollVoteModel.getUsernameAndChosenOptionOfVoters(poll_id);
                }
                // Before poll is closed
                if (canClosePoll) {
                    if (isOwner) {
                        messenger.warning("Prohlížíte výsledky před uzavřením hlasování, jelikož jste zakladatelem hlasování");
                    } else if (isAdmin) {
                        messenger.warning("Prohlížíte výsledky před uzavřením hlasování, jelikož jste administrátor");
                    }
                }
            }
        }
    } else {
        messenger.error("ID ankety není platné");
    }
} catch (error) {
    console.error("Chyba při načítání výsledků:", error);
    messenger.error("Nastala chyba při načítání výsledků ankety");
}
---

<Layout title={poll ? `Výsledky: ${poll.name}` : "Výsledky ankety"}>
    <div class="container">


        {poll && (
                <div class="poll-header">
                    <h1>{poll.name}</h1>

                    {poll.expires && (
                            <p class="poll-info">
                                {new Date(poll.expires) < new Date()
                                    ? `Anketa byla ukončena: ${new Date(poll.expires).toLocaleString()}`
                                    : `Anketa končí: ${new Date(poll.expires).toLocaleString()}`
                                }
                            </p>
                    )}

                    {!poll.expires && (
                            <p class="poll-info">Anketa nemá stanovený termín ukončení</p>
                    )}
                </div>
        )}

        {
            messenger.map(m => (
                    <Message message={m}/>
            ))
        }

        {canViewResults && options.length > 0 && (
                <FloatingContainer>
                    <h2>Výsledky hlasování</h2>
                    <p class="total-votes">Celkem hlasů: {totalVotes}</p>

                    <div class="results-list">
                        {voteCounts.map((option:any) => {
                            const voteCount = option.vote_count;
                            const percentage = totalVotes > 0 ? Math.round((voteCount / totalVotes) * 100) : 0;

                            return (
                                    <div class="result-item">
                                        <div class="result-info">
                                            <span class="result-text">{option.content}</span>
                                            <span class="result-count">{voteCount} ({percentage}%)</span>
                                        </div>
                                        <div class="progress-bar-container">
                                            <div class="progress-bar" style={`width: ${percentage}%`}></div>
                                        </div>
                                    </div>
                            );
                        })}
                    </div>
                </FloatingContainer>
        )}


        {canViewResults && !poll.anonymous && userVoteTable && (
                <FloatingContainer>
                    <h2>Hlasování uživatelů</h2>
                    <div class="results-list">
                        {userVoteTable.map((vote: any) => (
                                <div class="result-item">
                                    <div class="result-info">
                                        <span class="result-text">{vote.name}</span>
                                        <span class="result-count">{vote.content}</span>
                                    </div>
                                </div>
                        ))}
                    </div>
                </FloatingContainer>
        )}

        {canClosePoll && (
                <FloatingContainer backgroundColor="white">
                    <div class="actions-container">
                        <form method="POST">
                            <input type="hidden" name="action" value="close_poll">
                            <button type="submit" class="btn btn-danger" id="close-poll-btn">
                                Ukončit anketu nyní
                            </button>
                        </form>
                        <p class="warning-text">Toto tlačítko ukončí anketu a zveřejní výsledky pro všechny uživatele.</p>
                    </div>
                </FloatingContainer>
        )}

        {!canViewResults && poll && (
                <div class="no-results">
                    <p>Výsledky této ankety budou dostupné po jejím ukončení.</p>
                </div>
        )}

        <div class="back-link">
            <a href="/" class="btn btn-secondary">Zpět na hlavní stránku</a>
        </div>
    </div>
</Layout>

<style>
    .poll-header {
        text-align: center;
        margin-bottom: 30px;
    }

    h2 {
        margin-bottom: 20px;
        text-align: center;
    }

    .poll-info {
        color: #666;
    }

    .results-container {
        background-color: #f9f9f9;
        padding: 25px;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        margin-bottom: 30px;
    }

    .total-votes {
        text-align: center;
        font-weight: bold;
        margin-bottom: 20px;
    }

    .results-list {
        margin-top: 20px;
    }

    .result-item {
        margin-bottom: 15px;
    }

    .result-info {
        display: flex;
        justify-content: space-between;
        margin-bottom: 5px;
    }

    .result-text {
        font-weight: bold;
    }

    .result-count {
        color: #666;
    }

    .progress-bar-container {
        width: 100%;
        height: 20px;
        background-color: #e0e0e0;
        border-radius: 10px;
        overflow: hidden;
    }

    .progress-bar {
        height: 100%;
        background-color: #4CAF50;
        border-radius: 10px;
        min-width: 2px;
        transition: width 0.5s ease-in-out;
    }

    .actions-container {
        text-align: center;
        margin: 30px 0;
    }

    .btn {
        padding: 12px 25px;
        border-radius: 4px;
        font-size: 16px;
        cursor: pointer;
        border: none;
        transition: background-color 0.2s;
        text-decoration: none;
        display: inline-block;
    }

    .btn-danger {
        background-color: #d9534f;
        color: white;
    }

    .btn-danger:hover {
        background-color: #c9302c;
    }

    .btn-secondary {
        background-color: #f0f0f0;
        color: #333;
        border: 1px solid #ddd;
    }

    .btn-secondary:hover {
        background-color: #e0e0e0;
    }

    .warning-text {
        color: #d9534f;
        font-size: 18px;
        margin-top: 10px;
    }

    .no-results {
        text-align: center;
        padding: 40px 20px;
        background-color: #f9f9f9;
        border-radius: 8px;
        margin-bottom: 30px;
    }

    .back-link {
        text-align: center;
        margin-top: 30px;
    }
</style>

<script>
    document.getElementById('close-poll-btn')?.addEventListener('click', function (event) {
        const confirmed = confirm('Opravdu chcete ukončit tuto anketu? Tato akce je nevratná.');
        if (!confirmed) {
            event.preventDefault();
        }
    });
</script>